<main class="container-fluid">
  <div class="row vh-100">
    <!-- Div da esquerda -->
    <div class="col-md-4 bg-dark text-white p-0">
      <div style="max-width: 300px; width: 100%; margin-top: 7rem; border: 2px solid yellow;" class="rounded p-4 shadow-sm mx-auto">
        <h2 class="text-center">Cadastro de Listas de Emails</h2>
        <p class="text-center"><strong>Aqui você cadastra uma lista de emails!</strong></p>
        <p class="text-center">Cadastre o nome e selecione os contatos para a lista de envio.</p>
      </div>


      <%= render 'email_lists/error_messages', contact: @email_list %>

    </div>


    <div class="col-md-8 d-flex justify-content-center align-items-start" style="height: 40%; margin-top: 0rem;">
      <div style="max-width: 850px; width: 100%;  padding: 1rem; margin-top: 5rem;" class="rounded p-4 shadow-sm bg-light" id="main-content">
        <h1 class="text-center">Nova Lista</h1>

        <%= form_with(model: @email_list, local: true) do |form| %>


          <div class="mb-3">
            <%= form.label :name, "Nome", class: "form-label" %>
            <%= form.text_field :name, class: "form-control", id: "email_list_name" %>
          </div>

          <div class="mb-3">
            <div class="d-flex align-items-center">
              <%= form.label :contacts, "Contatos", class: "form-label me-auto" %>
              <span id="selected-count" class="ms-3">Contatos Selecionados: 0</span>
            </div>
            <% if @contacts.present? %>


              <div class="table-responsive" style="height: 200px; overflow-y: scroll;">
                <table class="table table-hover table-striped table-bordered text-center">
                  <thead class="thead-dark sticky-header">
                  <tr>
                    <th scope="col"><input type="checkbox" id="select-all" class="form-check-input"></th>
                    <th scope="col">Nome</th>
                    <th scope="col">Email</th>
                    <th scope="col">Criado</th>
                    <th scope="col">Atualizado</th>
                  </tr>
                  </thead>
                  <tbody>
                  <%= form.collection_check_boxes :contact_ids, @contacts, :id, :name do |cb| %>
                    <tr>
                      <td class="text-center"><%= cb.check_box class: "form-check-input contact-checkbox", data: { contactId: cb.object.id } %></td>
                      <td><%= cb.label class: "form-check-label" %></td>
                      <td><small class="text-muted"><%= cb.object.email %></small></td>
                      <td><small class="text-muted"><%= cb.object.created_at.strftime("%d/%m/%Y %H:%M") %></small></td>
                      <td><small class="text-muted"><%= cb.object.updated_at.strftime("%d/%m/%Y %H:%M") %></small></td>
                    </tr>
                  <% end %>
                  </tbody>
                </table>
              </div>
            <% else %>
              <p>No contacts available.</p>
            <% end %>
          </div>
          <br>
           <div class="d-flex justify-content-between mb-3">
            <%= form.submit 'Salvar', class: 'btn btn-primary' %>
            <%= link_to 'Voltar', email_lists_path, class: 'btn btn-secondary' %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</main>

<script>
    document.addEventListener("turbo:load", function() {
        const checkboxes = document.querySelectorAll(".contact-checkbox");
        const selectAllCheckbox = document.getElementById("select-all");
        const selectedCountSpan = document.getElementById("selected-count");
        const emailListName = document.getElementById("email_list_name");

        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll(".contact-checkbox:checked").length;
            selectedCountSpan.textContent = `Contatos Selecionados: ${selectedCount}`;
        }

        function handleSelectAll() {
            const isChecked = selectAllCheckbox.checked;
            checkboxes.forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            updateSelectedCount();
        }

        // Event Listeners
        if (selectAllCheckbox) {
            selectAllCheckbox.addEventListener("change", function() {
                handleSelectAll();
            });
        }

        if (checkboxes.length > 0) {
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener("change", function() {
                    updateSelectedCount();
                });
            });
        }

        // Ensure all checkboxes are unchecked when the page loads
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
        
              
        updateSelectedCount();

        if (!sessionStorage.getItem("reloaded")) {
          sessionStorage.setItem("reloaded", "true");
          location.reload(true);
        } else {
          sessionStorage.removeItem("reloaded");
        }
        
        
        // Mostrar a caixa de edição de texto
        document.getElementById("edit-text-button").addEventListener("click", function() {
            document.getElementById("main-content").classList.add("d-none");
            document.getElementById("text-email-box").classList.remove("d-none");
        });

        // Ocultar a caixa de edição de texto e mostrar a tela principal
        document.getElementById("text-email-box").querySelector("form").addEventListener("submit", function() {
            document.getElementById("main-content").classList.remove("d-none");
            document.getElementById("text-email-box").classList.add("d-none");
        });
    
   
    
    
        });
</script>
